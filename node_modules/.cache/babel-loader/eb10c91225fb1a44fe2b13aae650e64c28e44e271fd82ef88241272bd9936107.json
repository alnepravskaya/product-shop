{"ast":null,"code":"var _jsxFileName = \"/Users/alenakovalenko/Downloads/01-starting-project 4/src/store/CardProvider.js\",\n  _s = $RefreshSig$();\nimport CardContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const existingCardItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCardItem = state.items[existingCardItemIndex];\n    let updatedItem;\n    let updatedItems;\n    if (existingCardItem) {\n      updatedItem = {\n        ...existingCardItem,\n        amount: existingCardItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCardItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.item.concat(action.item);\n    }\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === \"REMOVE\") {}\n};\nconst defaultCardState = {\n  items: [],\n  totalAmount: 0\n};\nconst CardProvider = props => {\n  _s();\n  const [cardState, dispatchCardAction] = useReducer(cardReducer, defaultCardState);\n  const addItemToCardItem = item => {\n    dispatchCardAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemToCardItem = id => {\n    dispatchCardAction({\n      type: 'REMOVE',\n      id\n    });\n  };\n  const cardContext = {\n    items: cardState.items,\n    totalAmount: 0,\n    addItem: addItemToCardItem,\n    removeItem: removeItemToCardItem\n  };\n  return /*#__PURE__*/_jsxDEV(CardContext.Provider, {\n    value: cardContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }, this);\n};\n_s(CardProvider, \"mIiYz2IYPWA+eaJvDRQunXPNS9s=\");\n_c = CardProvider;\nexport default CardProvider;\nvar _c;\n$RefreshReg$(_c, \"CardProvider\");","map":{"version":3,"names":["CardContext","useReducer","cardReducer","state","action","type","existingCardItemIndex","items","findIndex","item","id","existingCardItem","updatedItem","updatedItems","amount","concat","updatedTotalAmount","totalAmount","price","defaultCardState","CardProvider","props","cardState","dispatchCardAction","addItemToCardItem","removeItemToCardItem","cardContext","addItem","removeItem","children"],"sources":["/Users/alenakovalenko/Downloads/01-starting-project 4/src/store/CardProvider.js"],"sourcesContent":["import CardContext from \"./cart-context\";\nimport {useReducer} from \"react\";\n\nconst cardReducer = (state, action) => {\n    if (action.type === 'ADD') {\n        const  existingCardItemIndex = state.items.findIndex(item=>item.id===action.item.id);\n        const existingCardItem = state.items[existingCardItemIndex];\n        let updatedItem;\n        let updatedItems;\n        if(existingCardItem){\n            updatedItem = {\n                ...existingCardItem,\n                amount: existingCardItem.amount+action.item.amount\n            }\n            updatedItems=[...state.items]\n            updatedItems[existingCardItemIndex]=updatedItem\n        }else {\n            updatedItems=state.item.concat(action.item)\n        }\n\n        const updatedTotalAmount   = state.totalAmount + action.item.price * action.item.amount;\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        };\n    }\n    if(action.type === \"REMOVE\") {\n\n    }\n}\n\nconst defaultCardState= {\n    items:  [],\n    totalAmount: 0,\n}\n\nconst CardProvider = props => {\n    const [cardState, dispatchCardAction] = useReducer(cardReducer, defaultCardState);\n\n    const addItemToCardItem = (item) => {\n        dispatchCardAction({type: 'ADD', item: item})\n    }\n\n    const removeItemToCardItem = (id) => {\n        dispatchCardAction({type: 'REMOVE', id})\n    };\n    const cardContext = {\n        items: cardState.items,\n        totalAmount: 0,\n        addItem: addItemToCardItem,\n        removeItem: removeItemToCardItem,\n    }\n\n\n    return (<CardContext.Provider value={cardContext}>{props.children}</CardContext.Provider>)\n}\n\nexport default CardProvider;\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,gBAAgB;AACxC,SAAQC,UAAU,QAAO,OAAO;AAAC;AAEjC,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACnC,IAAIA,MAAM,CAACC,IAAI,KAAK,KAAK,EAAE;IACvB,MAAOC,qBAAqB,GAAGH,KAAK,CAACI,KAAK,CAACC,SAAS,CAACC,IAAI,IAAEA,IAAI,CAACC,EAAE,KAAGN,MAAM,CAACK,IAAI,CAACC,EAAE,CAAC;IACpF,MAAMC,gBAAgB,GAAGR,KAAK,CAACI,KAAK,CAACD,qBAAqB,CAAC;IAC3D,IAAIM,WAAW;IACf,IAAIC,YAAY;IAChB,IAAGF,gBAAgB,EAAC;MAChBC,WAAW,GAAG;QACV,GAAGD,gBAAgB;QACnBG,MAAM,EAAEH,gBAAgB,CAACG,MAAM,GAACV,MAAM,CAACK,IAAI,CAACK;MAChD,CAAC;MACDD,YAAY,GAAC,CAAC,GAAGV,KAAK,CAACI,KAAK,CAAC;MAC7BM,YAAY,CAACP,qBAAqB,CAAC,GAACM,WAAW;IACnD,CAAC,MAAK;MACFC,YAAY,GAACV,KAAK,CAACM,IAAI,CAACM,MAAM,CAACX,MAAM,CAACK,IAAI,CAAC;IAC/C;IAEA,MAAMO,kBAAkB,GAAKb,KAAK,CAACc,WAAW,GAAGb,MAAM,CAACK,IAAI,CAACS,KAAK,GAAGd,MAAM,CAACK,IAAI,CAACK,MAAM;IACvF,OAAO;MACHP,KAAK,EAAEM,YAAY;MACnBI,WAAW,EAAED;IACjB,CAAC;EACL;EACA,IAAGZ,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE,CAE7B;AACJ,CAAC;AAED,MAAMc,gBAAgB,GAAE;EACpBZ,KAAK,EAAG,EAAE;EACVU,WAAW,EAAE;AACjB,CAAC;AAED,MAAMG,YAAY,GAAGC,KAAK,IAAI;EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAGtB,UAAU,CAACC,WAAW,EAAEiB,gBAAgB,CAAC;EAEjF,MAAMK,iBAAiB,GAAIf,IAAI,IAAK;IAChCc,kBAAkB,CAAC;MAAClB,IAAI,EAAE,KAAK;MAAEI,IAAI,EAAEA;IAAI,CAAC,CAAC;EACjD,CAAC;EAED,MAAMgB,oBAAoB,GAAIf,EAAE,IAAK;IACjCa,kBAAkB,CAAC;MAAClB,IAAI,EAAE,QAAQ;MAAEK;IAAE,CAAC,CAAC;EAC5C,CAAC;EACD,MAAMgB,WAAW,GAAG;IAChBnB,KAAK,EAAEe,SAAS,CAACf,KAAK;IACtBU,WAAW,EAAE,CAAC;IACdU,OAAO,EAAEH,iBAAiB;IAC1BI,UAAU,EAAEH;EAChB,CAAC;EAGD,oBAAQ,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEC,WAAY;IAAA,UAAEL,KAAK,CAACQ;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAwB;AAC7F,CAAC;AAAA,GAnBKT,YAAY;AAAA,KAAZA,YAAY;AAqBlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}