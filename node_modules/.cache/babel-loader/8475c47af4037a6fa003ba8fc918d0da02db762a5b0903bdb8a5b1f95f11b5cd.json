{"ast":null,"code":"var _jsxFileName = \"/Users/alenakovalenko/Downloads/product-shop/src/components/Meals/AvailableMeals/AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport { DUMMY_MEALS } from './constant';\nimport classes from './AvailableMeals.module.css';\nimport Card from '../../UI/Card/Card';\nimport MealItem from '../MealItem/MealItem';\nimport { useEffect, useState } from \"react\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      try {\n        setIsLoading(true);\n        const response = fetch('https://user-hooks-default-rtdb.firebaseio.com/meals.json').t;\n        const responseData = response.json();\n        const loadedMeals = [];\n        for (const key in responseData) {\n          loadedMeals.push({\n            id: key,\n            name: responseData[key].name,\n            description: responseData[key].description,\n            price: responseData[key].price\n          });\n        }\n        setMeals(loadedMeals);\n      } catch (error) {\n        console.log(error);\n        setMeals(DUMMY_MEALS);\n      }\n      setIsLoading(false);\n    };\n    void fetchMeals();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? 'Loading' : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.meals,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: meals.map(meal => /*#__PURE__*/_createElement(MealItem, {\n            ...meal,\n            key: meal.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }, this)\n  }, void 0, false);\n};\n_s(AvailableMeals, \"Opmz/k+5zTZAoo/mes+3X6ZqQsM=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["DUMMY_MEALS","classes","Card","MealItem","useEffect","useState","AvailableMeals","meals","setMeals","isLoading","setIsLoading","fetchMeals","response","fetch","t","responseData","json","loadedMeals","key","push","id","name","description","price","error","console","log","map","meal"],"sources":["/Users/alenakovalenko/Downloads/product-shop/src/components/Meals/AvailableMeals/AvailableMeals.js"],"sourcesContent":["import {DUMMY_MEALS} from './constant';\nimport classes from './AvailableMeals.module.css';\nimport Card from '../../UI/Card/Card';\nimport MealItem from '../MealItem/MealItem';\nimport {useEffect, useState} from \"react\";\n\nconst AvailableMeals = () => {\n    const [meals, setMeals] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchMeals = async () => {\n            try {\n                setIsLoading(true);\n                const response = fetch('https://user-hooks-default-rtdb.firebaseio.com/meals.json').t\n                const responseData = response.json()\n\n                const loadedMeals = [];\n                for (const key in responseData) {\n                    loadedMeals.push({\n                        id: key,\n                        name: responseData[key].name,\n                        description: responseData[key].description,\n                        price: responseData[key].price,\n                    })\n                }\n                setMeals(loadedMeals);\n            } catch (error) {\n                console.log(error)\n                setMeals(DUMMY_MEALS);\n            }\n\n            setIsLoading(false);\n        }\n\n        void fetchMeals();\n    }, [])\n\n    return (<>\n        {isLoading?\n            'Loading'\n            : <section className={classes.meals}>\n            <Card>\n                <ul>\n                    {meals.map((meal) => (\n                        <MealItem {...meal} key={meal.id}></MealItem>\n                    ))}\n                </ul>\n            </Card>\n        </section>}\n    </> );\n};\n\nexport default AvailableMeals;\n"],"mappings":";;AAAA,SAAQA,WAAW,QAAO,YAAY;AACtC,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAAA;AAE1C,MAAMC,cAAc,GAAG,MAAM;EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ,MAAMO,UAAU,GAAG,YAAY;MAC3B,IAAI;QACAD,YAAY,CAAC,IAAI,CAAC;QAClB,MAAME,QAAQ,GAAGC,KAAK,CAAC,2DAA2D,CAAC,CAACC,CAAC;QACrF,MAAMC,YAAY,GAAGH,QAAQ,CAACI,IAAI,EAAE;QAEpC,MAAMC,WAAW,GAAG,EAAE;QACtB,KAAK,MAAMC,GAAG,IAAIH,YAAY,EAAE;UAC5BE,WAAW,CAACE,IAAI,CAAC;YACbC,EAAE,EAAEF,GAAG;YACPG,IAAI,EAAEN,YAAY,CAACG,GAAG,CAAC,CAACG,IAAI;YAC5BC,WAAW,EAAEP,YAAY,CAACG,GAAG,CAAC,CAACI,WAAW;YAC1CC,KAAK,EAAER,YAAY,CAACG,GAAG,CAAC,CAACK;UAC7B,CAAC,CAAC;QACN;QACAf,QAAQ,CAACS,WAAW,CAAC;MACzB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClBhB,QAAQ,CAACR,WAAW,CAAC;MACzB;MAEAU,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC;IAED,KAAKC,UAAU,EAAE;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAQ;IAAA,UACHF,SAAS,GACN,SAAS,gBACP;MAAS,SAAS,EAAER,OAAO,CAACM,KAAM;MAAA,uBACpC,QAAC,IAAI;QAAA,uBACD;UAAA,UACKA,KAAK,CAACoB,GAAG,CAAEC,IAAI,iBACZ,eAAC,QAAQ;YAAA,GAAKA,IAAI;YAAE,GAAG,EAAEA,IAAI,CAACR,EAAG;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,EACpC;QAAC;UAAA;UAAA;UAAA;QAAA;MACD;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA;EACD,iBACX;AACP,CAAC;AAAC,GA7CId,cAAc;AAAA,KAAdA,cAAc;AA+CpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}