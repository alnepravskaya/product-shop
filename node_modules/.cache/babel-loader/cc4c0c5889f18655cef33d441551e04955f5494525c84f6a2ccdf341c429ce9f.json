{"ast":null,"code":"var _jsxFileName = \"/Users/alenakovalenko/Downloads/product-shop/src/components/Meals/AvailableMeals/AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport { DUMMY_MEALS } from './constant';\nimport classes from './AvailableMeals.module.css';\nimport Card from '../../UI/Card/Card';\nimport MealItem from '../MealItem/MealItem';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetch('https://ur-hooks-default-rtdb.firebaseio.com/meals.json');\n        debugger;\n        const responseData = await response.json();\n        const loadedMeals = [];\n        for (const key in responseData) {\n          loadedMeals.push({\n            id: key,\n            name: responseData[key].name,\n            description: responseData[key].description,\n            price: responseData[key].price\n          });\n        }\n        setMeals(loadedMeals);\n      } catch (error) {\n        debugger;\n        console.log(error);\n        setHttpError('Something wrong with data from server. You see dummy data');\n        setMeals(DUMMY_MEALS);\n      }\n      setIsLoading(false);\n    };\n    void fetchMeals();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: httpError ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n        className: classes.meals,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: meals.map(meal => /*#__PURE__*/_createElement(MealItem, {\n              ...meal,\n              key: meal.id,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 41\n              }\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n_s(AvailableMeals, \"GNhuq97CrYTRGtb4EdV+fANyLyQ=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["DUMMY_MEALS","classes","Card","MealItem","useEffect","useState","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","responseData","json","loadedMeals","key","push","id","name","description","price","error","console","log","mealsLoading","map","meal"],"sources":["/Users/alenakovalenko/Downloads/product-shop/src/components/Meals/AvailableMeals/AvailableMeals.js"],"sourcesContent":["import {DUMMY_MEALS} from './constant';\nimport classes from './AvailableMeals.module.css';\nimport Card from '../../UI/Card/Card';\nimport MealItem from '../MealItem/MealItem';\nimport {useEffect, useState} from 'react';\n\nconst AvailableMeals = () => {\n    const [meals, setMeals] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [httpError, setHttpError] = useState(null);\n\n    useEffect(() => {\n        const fetchMeals = async () => {\n            try {\n                setIsLoading(true);\n                const response = await fetch('https://ur-hooks-default-rtdb.firebaseio.com/meals.json');\n                debugger\n                const responseData = await response.json();\n\n                const loadedMeals = [];\n                for (const key in responseData) {\n                    loadedMeals.push({\n                        id: key,\n                        name: responseData[key].name,\n                        description: responseData[key].description,\n                        price: responseData[key].price\n                    });\n                }\n                setMeals(loadedMeals);\n            } catch (error) {\n                debugger;\n                console.log(error);\n                setHttpError('Something wrong with data from server. You see dummy data');\n                setMeals(DUMMY_MEALS);\n            }\n            setIsLoading(false);\n\n        };\n\n\n        void fetchMeals();\n\n    }, []);\n\n    return (\n        <>\n            {isLoading ? (\n                <section className={classes.mealsLoading}>\n                    <p>Loading...</p>\n                </section>\n            ) : (\n                <>\n                    {httpError ? (\n                        <p>{httpError}</p>\n                    ) : (\n                        <section className={classes.meals}>\n                            <Card>\n                                <ul>\n                                    {meals.map((meal) => (\n                                        <MealItem {...meal} key={meal.id}></MealItem>\n                                    ))}\n                                </ul>\n                            </Card>\n                        </section>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default AvailableMeals;\n"],"mappings":";;AAAA,SAAQA,WAAW,QAAO,YAAY;AACtC,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAAA;AAE1C,MAAMC,cAAc,GAAG,MAAM;EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ,MAAMS,UAAU,GAAG,YAAY;MAC3B,IAAI;QACAH,YAAY,CAAC,IAAI,CAAC;QAClB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,yDAAyD,CAAC;QACvF;QACA,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;QAE1C,MAAMC,WAAW,GAAG,EAAE;QACtB,KAAK,MAAMC,GAAG,IAAIH,YAAY,EAAE;UAC5BE,WAAW,CAACE,IAAI,CAAC;YACbC,EAAE,EAAEF,GAAG;YACPG,IAAI,EAAEN,YAAY,CAACG,GAAG,CAAC,CAACG,IAAI;YAC5BC,WAAW,EAAEP,YAAY,CAACG,GAAG,CAAC,CAACI,WAAW;YAC1CC,KAAK,EAAER,YAAY,CAACG,GAAG,CAAC,CAACK;UAC7B,CAAC,CAAC;QACN;QACAhB,QAAQ,CAACU,WAAW,CAAC;MACzB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACZ;QACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClBb,YAAY,CAAC,2DAA2D,CAAC;QACzEJ,QAAQ,CAACR,WAAW,CAAC;MACzB;MACAU,YAAY,CAAC,KAAK,CAAC;IAEvB,CAAC;IAGD,KAAKG,UAAU,EAAE;EAErB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAA,UACKJ,SAAS,gBACN;MAAS,SAAS,EAAER,OAAO,CAAC2B,YAAa;MAAA,uBACrC;QAAA,UAAG;MAAU;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QACX,gBAEV;MAAA,UACKjB,SAAS,gBACN;QAAA,UAAIA;MAAS;QAAA;QAAA;QAAA;MAAA,QAAK,gBAElB;QAAS,SAAS,EAAEV,OAAO,CAACM,KAAM;QAAA,uBAC9B,QAAC,IAAI;UAAA,uBACD;YAAA,UACKA,KAAK,CAACsB,GAAG,CAAEC,IAAI,iBACZ,eAAC,QAAQ;cAAA,GAAKA,IAAI;cAAE,GAAG,EAAEA,IAAI,CAACT,EAAG;cAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAA,EACpC;UAAC;YAAA;YAAA;YAAA;UAAA;QACD;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA;IAEd;EAER,iBACF;AAEX,CAAC;AAAC,GA/DIf,cAAc;AAAA,KAAdA,cAAc;AAiEpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}