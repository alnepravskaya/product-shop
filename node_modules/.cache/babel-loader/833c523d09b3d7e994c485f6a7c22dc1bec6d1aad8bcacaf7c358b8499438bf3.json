{"ast":null,"code":"var _jsxFileName = \"/Users/alenakovalenko/Downloads/01-starting-project 4/src/store/CardProvider.js\",\n  _s = $RefreshSig$();\nimport CardContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const existingCardItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCardItem = state.items[existingCardItemIndex];\n    let updatedItem;\n    let updatedItems;\n    if (existingCardItem) {\n      updatedItem = {\n        ...existingCardItem,\n        amount: existingCardItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCardItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    const existingCardItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingCardItem = state.items[existingCardItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingCardItem.price;\n    let updatedItems;\n    if (existingCardItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = {\n        ...existingCardItem,\n        amount: existingCardItem.amount - 1\n      };\n      updatedItems[existingCardItemIndex] = updatedItem;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n};\nconst defaultCardState = {\n  items: [],\n  totalAmount: 0\n};\nconst CardProvider = props => {\n  _s();\n  const [cardState, dispatchCardAction] = useReducer(cardReducer, defaultCardState);\n  const addItemToCardItem = item => {\n    dispatchCardAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemToCardItem = id => {\n    dispatchCardAction({\n      type: 'REMOVE',\n      id\n    });\n  };\n  const cardContext = {\n    items: cardState.items,\n    totalAmount: 0,\n    addItem: addItemToCardItem,\n    removeItem: removeItemToCardItem\n  };\n  return /*#__PURE__*/_jsxDEV(CardContext.Provider, {\n    value: cardContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 13\n  }, this);\n};\n_s(CardProvider, \"mIiYz2IYPWA+eaJvDRQunXPNS9s=\");\n_c = CardProvider;\nexport default CardProvider;\nvar _c;\n$RefreshReg$(_c, \"CardProvider\");","map":{"version":3,"names":["CardContext","useReducer","cardReducer","state","action","type","existingCardItemIndex","items","findIndex","item","id","existingCardItem","updatedItem","updatedItems","amount","concat","updatedTotalAmount","totalAmount","price","filter","defaultCardState","CardProvider","props","cardState","dispatchCardAction","addItemToCardItem","removeItemToCardItem","cardContext","addItem","removeItem","children"],"sources":["/Users/alenakovalenko/Downloads/01-starting-project 4/src/store/CardProvider.js"],"sourcesContent":["import CardContext from \"./cart-context\";\nimport {useReducer} from \"react\";\n\nconst cardReducer = (state, action) => {\n    if (action.type === 'ADD') {\n        const existingCardItemIndex = state.items.findIndex(item => item.id === action.item.id);\n        const existingCardItem = state.items[existingCardItemIndex];\n        let updatedItem;\n        let updatedItems;\n        if (existingCardItem) {\n            updatedItem = {\n                ...existingCardItem,\n                amount: existingCardItem.amount + action.item.amount\n            }\n            updatedItems = [...state.items]\n            updatedItems[existingCardItemIndex] = updatedItem\n        } else {\n            updatedItems = state.items.concat(action.item)\n        }\n\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        };\n    }\n    if (action.type === \"REMOVE\") {\n\n        const existingCardItemIndex = state.items.findIndex(item => item.id === action.id);\n        const existingCardItem = state.items[existingCardItemIndex];\n        const updatedTotalAmount = state.totalAmount - existingCardItem.price;\n        let updatedItems;\n        if (existingCardItem.amount === 1) {\n            updatedItems = state.items.filter(item => item.id !== action.id)\n        } else {\n            const updatedItem = {...existingCardItem, amount: existingCardItem.amount -1 }\n            updatedItems[existingCardItemIndex]=updatedItem\n\n        }\n\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        }\n    }\n}\n\nconst defaultCardState = {\n    items: [],\n    totalAmount: 0,\n}\n\nconst CardProvider = props => {\n    const [cardState, dispatchCardAction] = useReducer(cardReducer, defaultCardState);\n\n    const addItemToCardItem = (item) => {\n        dispatchCardAction({type: 'ADD', item: item})\n    }\n\n    const removeItemToCardItem = (id) => {\n        dispatchCardAction({type: 'REMOVE', id})\n    };\n    const cardContext = {\n        items: cardState.items,\n        totalAmount: 0,\n        addItem: addItemToCardItem,\n        removeItem: removeItemToCardItem,\n    }\n\n\n    return (<CardContext.Provider value={cardContext}>{props.children}</CardContext.Provider>)\n}\n\nexport default CardProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}