{"ast":null,"code":"var _jsxFileName = \"/Users/alenakovalenko/Downloads/product-shop/src/components/Card/Checkout/Checkout.js\",\n  _s = $RefreshSig$();\nimport classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() === '';\nconst isMoreFiveChars = value => value.trim().length >= 5;\nconst Checkout = props => {\n  _s();\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postcodeInputRef = useRef();\n  const cityInputRef = useRef();\n  const [formInputsValidity, setFormValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const confirmHandler = e => {\n    var _nameInputRef$current, _streetInputRef$curre, _postcodeInputRef$cur, _cityInputRef$current;\n    e.preventDefault();\n    const enteredName = (_nameInputRef$current = nameInputRef.current) === null || _nameInputRef$current === void 0 ? void 0 : _nameInputRef$current.value;\n    const enteredStreet = (_streetInputRef$curre = streetInputRef.current) === null || _streetInputRef$curre === void 0 ? void 0 : _streetInputRef$curre.value;\n    const enteredPostcode = (_postcodeInputRef$cur = postcodeInputRef.current) === null || _postcodeInputRef$cur === void 0 ? void 0 : _postcodeInputRef$cur.value;\n    const enteredCity = (_cityInputRef$current = cityInputRef.current) === null || _cityInputRef$current === void 0 ? void 0 : _cityInputRef$current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostcodeIsValid = isMoreFiveChars(enteredPostcode);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    setFormValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostcodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostcodeIsValid && enteredCityIsValid;\n    if (!formIsValid) {\n      return;\n    }\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      postalCode: enteredPostcode,\n      city: enteredCity\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: confirmHandler,\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.postalCode ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Post Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postcodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code(5 chars min)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"Lv5FjzSqzh0tA5wEqNxFXvA3HeM=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["classes","useRef","useState","isEmpty","value","trim","isMoreFiveChars","length","Checkout","props","nameInputRef","streetInputRef","postcodeInputRef","cityInputRef","formInputsValidity","setFormValidity","name","street","city","postalCode","confirmHandler","e","preventDefault","enteredName","current","enteredStreet","enteredPostcode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostcodeIsValid","enteredCityIsValid","formIsValid","onConfirm","form","control","invalid","actions","onCancel","submit"],"sources":["/Users/alenakovalenko/Downloads/product-shop/src/components/Card/Checkout/Checkout.js"],"sourcesContent":["import classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\n\nconst isEmpty = (value) => value.trim() === '';\nconst isMoreFiveChars = (value) => value.trim().length >= 5;\nconst Checkout = (props) => {\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postcodeInputRef = useRef();\n  const cityInputRef = useRef();\n  const [formInputsValidity, setFormValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const confirmHandler = (e) => {\n    e.preventDefault();\n\n    const enteredName = nameInputRef.current?.value;\n    const enteredStreet = streetInputRef.current?.value;\n    const enteredPostcode = postcodeInputRef.current?.value;\n    const enteredCity = cityInputRef.current?.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostcodeIsValid = isMoreFiveChars(enteredPostcode);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n\n    setFormValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostcodeIsValid\n    });\n\n    const formIsValid =\n      enteredNameIsValid && enteredStreetIsValid && enteredPostcodeIsValid && enteredCityIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      postalCode: enteredPostcode,\n      city: enteredCity\n    });\n  };\n\n  return (\n    <form onSubmit={confirmHandler} className={classes.form}>\n      <div className={`${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`}>\n        <label htmlFor=\"name\">Your name</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\n        {!formInputsValidity.name && <p>Please enter a valid name</p>}\n      </div>\n      <div className={`${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`}>\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\n        {!formInputsValidity.street && <p>Please enter a valid street</p>}\n      </div>\n      <div className={`${classes.control} ${formInputsValidity.postalCode ? '' : classes.invalid}`}>\n        <label htmlFor=\"postal\">Post Code</label>\n        <input type=\"text\" id=\"postal\" ref={postcodeInputRef} />\n        {!formInputsValidity.postalCode && <p>Please enter a valid postal code(5 chars min)</p>}\n      </div>\n      <div className={`${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`}>\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\n        {!formInputsValidity.city && <p>Please enter a valid city</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}